# Generated by Django 5.2.5 on 2025-08-27 17:39

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100)),
                ('cnpj', models.CharField(max_length=18, unique=True)),
                ('specialization', models.CharField(choices=[('digital', 'Impressão Digital'), ('offset', 'Impressão Offset'), ('large_format', 'Grande Formato'), ('corporate', 'Material Corporativo'), ('promotional', 'Material Promocional'), ('varied', 'Variados')], default='varied', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pendente de Aprovação'), ('approved', 'Aprovado'), ('rejected', 'Rejeitado'), ('suspended', 'Suspenso')], default='pending', max_length=20)),
                ('capacity', models.IntegerField(default=5, help_text='Número máximo de pedidos simultâneos', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('current_orders', models.IntegerField(default=0)),
                ('rating', models.FloatField(default=5.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('total_ratings', models.IntegerField(default=0)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=2)),
                ('zip_code', models.CharField(max_length=10)),
                ('description', models.TextField(blank=True)),
                ('delivery_radius_km', models.IntegerField(default=50, help_text='Raio de entrega em quilômetros', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(500)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='partner', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Gráfica Parceira',
                'verbose_name_plural': 'Gráficas Parceiras',
                'ordering': ('company_name',),
            },
        ),
        migrations.CreateModel(
            name='PartnerEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('equipment_type', models.CharField(choices=[('printer', 'Impressora'), ('cutter', 'Cortadora'), ('binder', 'Encadernadora'), ('finishing', 'Acabamento'), ('other', 'Outro')], max_length=20)),
                ('brand', models.CharField(blank=True, max_length=50)),
                ('model', models.CharField(blank=True, max_length=50)),
                ('capacity', models.CharField(blank=True, help_text='Capacidade de produção', max_length=100)),
                ('is_operational', models.BooleanField(default=True)),
                ('acquired_date', models.DateField(blank=True, null=True)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipments', to='partners.partner')),
            ],
            options={
                'verbose_name': 'Equipamento da Gráfica',
                'verbose_name_plural': 'Equipamentos das Gráficas',
            },
        ),
        migrations.CreateModel(
            name='PartnerServiceArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=2)),
                ('delivery_days', models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('delivery_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_areas', to='partners.partner')),
            ],
            options={
                'verbose_name': 'Área de Serviço',
                'verbose_name_plural': 'Áreas de Serviço',
                'unique_together': {('partner', 'city', 'state')},
            },
        ),
        migrations.CreateModel(
            name='PartnerSpecialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expertise_level', models.IntegerField(default=1, help_text='Nível de especialização (1-5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specialized_partners', to='products.category')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specializations', to='partners.partner')),
            ],
            options={
                'verbose_name': 'Especialização da Gráfica',
                'verbose_name_plural': 'Especializações das Gráficas',
                'unique_together': {('partner', 'category')},
            },
        ),
    ]
